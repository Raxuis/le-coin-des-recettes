generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique()
  name      String
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recipes       Recipes[]
  comments      Comments[]
  ratings       Ratings[]
  shoppingLists ShoppingList[]
}

model Recipes {
  id              String         @id @default(uuid())
  // image       String?
  // sourceUrl   String?
  title           String         @unique
  description     String?
  type            RecipeTypes
  people          Int?
  slug            String?        @unique
  author          String?
  ingredients     String[]
  steps           String[]
  preparationTime Int
  restingTime     Int
  cookingTime     Int
  totalTime       Int
  difficulty      String
  budget          String
  specialEvent    SpecialEvents?

  creator   User?   @relation(fields: [creatorId], references: [id])
  creatorId String?

  comments Comments[]
  ratings  Ratings[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comments {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  recipe    Recipes  @relation(fields: [recipeId], references: [id])
  recipeId  String
}

model Ratings {
  id        String      @id @default(cuid())
  value     RatingValue
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  recipe    Recipes     @relation(fields: [recipeId], references: [id])
  recipeId  String
}

model ShoppingList {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  items     Items[]
}

model Items {
  id             String       @id @default(cuid())
  title          String
  isChecked      Boolean      @default(false)
  ShoppingList   ShoppingList @relation(fields: [ShoppingListId], references: [id], onDelete: Cascade)
  ShoppingListId String
}

// Added rating value enum because of the fact we cannot add limit in prisma
enum RatingValue {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

enum RecipeTypes {
  PLAT
  DESSERT
}

enum SpecialEvents {
  HALLOWEEN
  NOEL
  ANNIVERSAIRE
  SOIREE_ENTRE_AMIS
  REPAS_ETUDIANT
  REPAS_FAMILLE
}
